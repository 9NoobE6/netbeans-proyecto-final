/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventana_pricipal;

// Importar mis clases
import clases.*;
import ventana_singup.SingUp;

// Importar librerias java
import javax.swing.Timer;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import jpanelimagen.ImagenFondo;

/**
 *
 * @author max98
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    public Principal() {
        initComponents();
        this.fncEstablecerItems();
        this.cmbox_registro_anho.setSelectedIndex( this.cmbox_registro_anho.getItemCount() - 19);
        this.setLocationRelativeTo(null);
        this.fncInsertarPicture(this.panel_1_Background, Rutas.path_background_jframe_principal , false);
        
        panel_singup.setImagenFondo(new ImagenFondo( new java.io.File( Rutas.path_background_panel_singup ), .2f ));
        panel_registro.setImagenFondo(new ImagenFondo( new java.io.File( Rutas.path_background_panel_registro ), 1.0f ));
        // /img/logo1_3.png, /img/logo2.png
        panel_logo.setImagenFondo(new ImagenFondo( new java.io.File( Rutas.path_logo ), 0.8f ));
        panel_logo.setToolTipText("RS Gobim");
        
        // * Verificar que las cuentas existan
        this.fncBorrarCuentasInexistentes();

    }
    
    private void fncEstablecerItems(){
        this.cmbox_registro_dia.removeAllItems();
        this.cmbox_registro_mes.removeAllItems();
        this.cmbox_registro_anho.removeAllItems();
        
        for(int item = 1; item <= 32; item++  ){
            if(item <= 9){
                this.cmbox_registro_dia.addItem("0"+item);
            }else{
                this.cmbox_registro_dia.addItem(""+item);
            }
        }
        
        for(int item = 1; item <= 12; item++  ){
            if(item <= 9){
                this.cmbox_registro_mes.addItem("0"+item);
            }else{
                this.cmbox_registro_mes.addItem(""+item);
            }
        }
        
        for(int item = 1985; item <= 2020; item++  ){
            this.cmbox_registro_anho.addItem(""+item);
        }
        
    }
    
    
    private void fncInsertarPicture(JPanel contenedor, String url, boolean vaciar){
        
        if(vaciar) contenedor.removeAll();
        
        ImageIcon icono = new ImageIcon( url );
        JLabel etiquetaImagen = new JLabel();
        etiquetaImagen.setBounds(0, 0, contenedor.getWidth(), contenedor.getHeight());
        etiquetaImagen.setIcon( new ImageIcon(icono.getImage().getScaledInstance(etiquetaImagen.getWidth(), etiquetaImagen.getHeight(), Image.SCALE_SMOOTH)) );
        contenedor.add(etiquetaImagen);
        
        if(vaciar) contenedor.validate();
        if(vaciar) contenedor.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_1_Background = new javax.swing.JPanel();
        btnRegistrarme = new javax.swing.JButton();
        btnIniciarSession = new javax.swing.JButton();
        panel_registro = new jpanelimagen.JPanelImagen();
        campo_registro_nombres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campo_registro_apellidos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campo_registro_email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        campo_registro_contrasenha = new javax.swing.JPasswordField();
        cmbox_registro_dia = new javax.swing.JComboBox<>();
        cmbox_registro_mes = new javax.swing.JComboBox<>();
        cmbox_registro_anho = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        sexo_registro_femenino = new javax.swing.JRadioButton();
        sexo_registro_masculino = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        panel_singup = new jpanelimagen.JPanelImagen();
        jLabel7 = new javax.swing.JLabel();
        campo_singup_email = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        campo_singup_contrasenha = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        panel_logo = new jpanelimagen.JPanelImagen();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnRegistrarme.setBackground(new java.awt.Color(0, 102, 153));
        btnRegistrarme.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarme.setText("Registrarme");
        btnRegistrarme.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRegistrarmeMouseReleased(evt);
            }
        });

        btnIniciarSession.setBackground(new java.awt.Color(0, 153, 51));
        btnIniciarSession.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciarSession.setText("Iniciar Session");
        btnIniciarSession.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnIniciarSessionMouseReleased(evt);
            }
        });
        btnIniciarSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSessionActionPerformed(evt);
            }
        });

        panel_registro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));

        campo_registro_nombres.setText("jTextField1");
        campo_registro_nombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campo_registro_nombresKeyTyped(evt);
            }
        });

        jLabel1.setText("Nombre (s): ");

        jLabel2.setText("Apellidos: ");

        campo_registro_apellidos.setText("jTextField1");
        campo_registro_apellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campo_registro_apellidosKeyTyped(evt);
            }
        });

        jLabel3.setText("Nacimiento (DD/MM/AAAA):");

        jLabel4.setText("Contrase√±a:");

        campo_registro_email.setText("abc@gobim.dev");
        campo_registro_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campo_registro_emailKeyTyped(evt);
            }
        });

        jLabel5.setText("Email:");

        campo_registro_contrasenha.setText("jPasswordField1");
        campo_registro_contrasenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campo_registro_contrasenhaKeyTyped(evt);
            }
        });

        cmbox_registro_dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        cmbox_registro_mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        cmbox_registro_anho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel6.setText("Sexo: ");

        sexo_registro_femenino.setSelected(true);
        sexo_registro_femenino.setText("Femenino");
        sexo_registro_femenino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sexo_registro_femeninoMouseReleased(evt);
            }
        });

        sexo_registro_masculino.setText("Masculino");
        sexo_registro_masculino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sexo_registro_masculinoMouseReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Formulario de registro");

        javax.swing.GroupLayout panel_registroLayout = new javax.swing.GroupLayout(panel_registro);
        panel_registro.setLayout(panel_registroLayout);
        panel_registroLayout.setHorizontalGroup(
            panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_registroLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registroLayout.createSequentialGroup()
                        .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(campo_registro_email)
                                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panel_registroLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(255, 255, 255))
                                    .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(campo_registro_nombres, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                                        .addComponent(campo_registro_apellidos)))
                                .addComponent(campo_registro_contrasenha))
                            .addGroup(panel_registroLayout.createSequentialGroup()
                                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_registroLayout.createSequentialGroup()
                                        .addComponent(cmbox_registro_dia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbox_registro_mes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sexo_registro_femenino))
                                .addGap(18, 18, 18)
                                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sexo_registro_masculino)
                                    .addComponent(cmbox_registro_anho, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registroLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(102, 102, 102))))
        );
        panel_registroLayout.setVerticalGroup(
            panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_registroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campo_registro_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_registro_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbox_registro_dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbox_registro_mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbox_registro_anho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sexo_registro_femenino)
                    .addComponent(sexo_registro_masculino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campo_registro_contrasenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_registro_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        panel_singup.setOpaque(false);

        jLabel7.setText("Contrase√±a: ");

        campo_singup_email.setText("jTextField1");
        campo_singup_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campo_singup_emailKeyReleased(evt);
            }
        });

        jLabel8.setText("Email:");

        campo_singup_contrasenha.setText("jPasswordField1");
        campo_singup_contrasenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campo_singup_contrasenhaKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Inicio de session");

        panel_logo.setOpaque(false);

        javax.swing.GroupLayout panel_logoLayout = new javax.swing.GroupLayout(panel_logo);
        panel_logo.setLayout(panel_logoLayout);
        panel_logoLayout.setHorizontalGroup(
            panel_logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        panel_logoLayout.setVerticalGroup(
            panel_logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("RS GOBIM");

        javax.swing.GroupLayout panel_singupLayout = new javax.swing.GroupLayout(panel_singup);
        panel_singup.setLayout(panel_singupLayout);
        panel_singupLayout.setHorizontalGroup(
            panel_singupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_singupLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panel_singupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(panel_singupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(campo_singup_contrasenha)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(campo_singup_email, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_singupLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_singupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_singupLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11))
                    .addComponent(panel_logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );
        panel_singupLayout.setVerticalGroup(
            panel_singupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_singupLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel10)
                .addGap(19, 19, 19)
                .addComponent(panel_logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(38, 38, 38)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_singup_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_singup_contrasenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_1_BackgroundLayout = new javax.swing.GroupLayout(panel_1_Background);
        panel_1_Background.setLayout(panel_1_BackgroundLayout);
        panel_1_BackgroundLayout.setHorizontalGroup(
            panel_1_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1_BackgroundLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel_1_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_1_BackgroundLayout.createSequentialGroup()
                        .addComponent(btnIniciarSession)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegistrarme))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_1_BackgroundLayout.createSequentialGroup()
                        .addComponent(panel_singup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panel_registro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        panel_1_BackgroundLayout.setVerticalGroup(
            panel_1_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1_BackgroundLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panel_1_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_singup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_registro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_1_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIniciarSession)
                    .addComponent(btnRegistrarme))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_1_Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_1_Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarmeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarmeMouseReleased
        // TODO add your handling code here:
        int anho = Integer.parseInt( this.cmbox_registro_anho.getItemAt( this.cmbox_registro_anho.getSelectedIndex() ) );
        
        if( (2020-anho) < 18 ){
            JOptionPane.showMessageDialog(null, "Eres menor de edad!");
        }else if( this.campo_registro_nombres.getText().trim().length() > (20-1) ){
            JOptionPane.showMessageDialog(null, "Introduzca nombre(s) de 20 caracteres, por favor...");
        }else if( this.campo_registro_nombres.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca su(s) nombre(s), por favor...");
        }else if( this.campo_registro_apellidos.getText().trim().length() > (20-1) ){
            JOptionPane.showMessageDialog(null, "Introduzca apellido(s) de 20 caracteres, por favor...");
        }else if( this.campo_registro_apellidos.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca su(s) apellido(s), por favor...");
        }else if( String.valueOf(this.campo_registro_contrasenha.getPassword()).trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca una contrase√±a, por favor...");
        }else if( this.campo_registro_email.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca un correo electronico con terminaci√≥n "+Storage.extension_rs+" , por favor...\n"
                    +"por ejemplo example"+Storage.extension_rs+"");
        }else if( !this.campo_registro_email.getText().trim().contains(Storage.extension_rs) || !this.fncVerificarEmail() ){
            JOptionPane.showMessageDialog(null, "Introduzca un correo electronico con terminaci√≥n "+Storage.extension_rs+" , por favor...\n" 
                    +"por ejemplo example"+Storage.extension_rs+"");
        }else if( this.campo_registro_email.getText().trim().length() > 23 ){
            JOptionPane.showMessageDialog(null, "Introduzca un correo electronico menor o igual a 23 caracteres, por favor...");
        }else{
                
            // Crear rutas para verificar su existencia
            String email = this.campo_registro_email.getText();
            File archivo_data = new File( Storage.fncStorageObtenerRutaData( email ) );
            File contendor_perfil = new File( Rutas.storage_profiles + email);
            boolean cuenta_registrado = Storage.fncStorageEncontrarUnaCuenta(Rutas.path_profiles, email );

            System.out.println("Data :: " + archivo_data);
            System.out.println("Contenedor :: " + contendor_perfil);
            System.out.println("Crear cuenta :: " + cuenta_registrado);
            
            // Si la cuenta no esta registrada como profile.txt .... 
            // Significa que la cuenta no esta creado...
            if( !cuenta_registrado ){
                //System.out.println("Puedes eliminar la cuenta existente y crear uno nuevo...");
                // Entonces si existe un contenedor perfil de la cuenta a crear
                // se elimina para crear el nuevo perfil
                Storage.fncStorageEliminarDirectorio(contendor_perfil);
            }
                      
            // Verificamos que el contenedor perfil a crear no exista y su archivo .data
            if( ((contendor_perfil.isDirectory() || !contendor_perfil.exists()) && !archivo_data.exists())){
                
                // Si no existe se crea la cuenta
                this.fncCrearCuentaNueva();
                
                // Interntar crear archivo .data, donde se almacenan los datos personales del usuario
                try {
                    // Registrar datos de usuario (.data)
                    if (archivo_data.createNewFile()) {
                        FileWriter registrar_datos = new FileWriter(archivo_data);
                        
                        // Registramos nombres y apellidos
                        registrar_datos.write(this.campo_registro_nombres.getText() + "\n");
                        registrar_datos.write(this.campo_registro_apellidos.getText() + "\n");
                        
                        // Reconstruimos la fecha de nacimiento y lo regisrtramos
                        String Fnacimiento = (String)this.cmbox_registro_dia.getSelectedItem()
                                +"/"+ (String)this.cmbox_registro_mes.getSelectedItem()
                                +"/"+ (String)this.cmbox_registro_anho.getSelectedItem();     
                        registrar_datos.write(Fnacimiento + "\n");
                        
                        // Registrar el sexo seleccionado por el usuario
                        if( this.sexo_registro_femenino.isSelected() ){
                            registrar_datos.write("Femenino" + "\n");
                        }else{
                            registrar_datos.write("Masculino" + "\n");
                        }
                        
                        // Registrar la contrase√±a
                        registrar_datos.write(String.valueOf(this.campo_registro_contrasenha.getPassword()) + "\n");
                        
                        // Registrar el email
                        registrar_datos.write(this.campo_registro_email.getText() + "\n");
                        
                        // Registrar un imagen de perfil por defecto
                        registrar_datos.write(Rutas.default_img + "\n");
                        
                        // Cerrar el archivo .data con los datos personales del usuario.
                        registrar_datos.close();

                        // Actualizar y Registrar a this.campo_registro_email.getText()
                        Storage.fncStorageEliminarUnaLinea(new File(Rutas.path_profiles), email );
                        Storage.fncStorageAcoplarUnaLinea(Rutas.path_profiles, email );
                        
                        JOptionPane.showMessageDialog(null, "Data:: Usuario creado exitosamente...");

                    }else{System.out.println("Tuve un error..."); }
                
                } catch (IOException e) {
                    System.out.println("An error occurred.");
                    e.printStackTrace();
                }
            }else {
                // Mostrar un mensaje de email registrado
                JOptionPane.showMessageDialog(null, "Usuario existente...\nIntroduzca un nuevo correo eletronico.");
            }
            
        }
        
    }//GEN-LAST:event_btnRegistrarmeMouseReleased

    private void sexo_registro_femeninoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sexo_registro_femeninoMouseReleased
        // TODO add your handling code here:
        this.sexo_registro_femenino.setSelected(true);
        this.sexo_registro_masculino.setSelected(false);
    }//GEN-LAST:event_sexo_registro_femeninoMouseReleased

    private void sexo_registro_masculinoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sexo_registro_masculinoMouseReleased
        // TODO add your handling code here:
        this.sexo_registro_femenino.setSelected(false);
        this.sexo_registro_masculino.setSelected(true);
    }//GEN-LAST:event_sexo_registro_masculinoMouseReleased

    private void btnIniciarSessionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarSessionMouseReleased
        // TODO add your handling code here:
        this.fncIniciarSession();
    }//GEN-LAST:event_btnIniciarSessionMouseReleased

    private void campo_registro_nombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_registro_nombresKeyTyped

        // Solo se aceptan caracteres y un espacios        
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar() == ' ' ){

        }else{
            evt.consume();
            getToolkit().beep();
        }
        
    }//GEN-LAST:event_campo_registro_nombresKeyTyped

    private void campo_registro_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_registro_emailKeyTyped
   
        // Solo se aceptan caracteres y numeros el . y @
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || Character.isDigit(car) || evt.getKeyChar() == '@' || evt.getKeyChar() == '.'){

        }else{
            evt.consume();
            getToolkit().beep();
        }
        
    }//GEN-LAST:event_campo_registro_emailKeyTyped

    private void campo_registro_contrasenhaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_registro_contrasenhaKeyTyped
        // TODO add your handling code here:
        
        /*
        // Solo se aceptan caracteres y un espacios        
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || Character.isDigit(car)){

        }else{
            evt.consume();
            getToolkit().beep();
        }
        */
        
    }//GEN-LAST:event_campo_registro_contrasenhaKeyTyped

    private void campo_registro_apellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_registro_apellidosKeyTyped

        // Solo se aceptan caracteres y un espacios        
        char car = evt.getKeyChar();
        if(Character.isLetter(car) || evt.getKeyChar() == ' ' ){

        }else{
            evt.consume();
            getToolkit().beep();
        }
        
    }//GEN-LAST:event_campo_registro_apellidosKeyTyped

    private void campo_singup_emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_singup_emailKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.fncIniciarSession();
        }
    }//GEN-LAST:event_campo_singup_emailKeyReleased

    private void campo_singup_contrasenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_singup_contrasenhaKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.fncIniciarSession();
        }
    }//GEN-LAST:event_campo_singup_contrasenhaKeyReleased

    private void btnIniciarSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIniciarSessionActionPerformed
    
    private boolean fncVerificarContrasehna(String file){
        String contrasena="";
        
        // * Verificar si el archivo .data existe
        if( new File(file).exists() || !file.isEmpty() ){           
            try{
                String pwd = String.valueOf(this.campo_singup_contrasenha.getPassword()).trim();
                BufferedReader database = new BufferedReader(new FileReader(new File(file)));
                String linea; int item=1;
                
                while( (linea = database.readLine()) != null ){
                    if(item == 5){
                        contrasena = linea;
                        break;
                    }
                    item++;
                }
                
                database.close(); // Cerrar el archivo abierto
            }catch(Exception e){}    
        }else return false;
        
        System.out.println("Formulario: " + String.valueOf( this.campo_singup_contrasenha.getPassword() ).trim());
        System.out.println("Data : " + contrasena.trim() );
        return String.valueOf( this.campo_singup_contrasenha.getPassword() ).equals(contrasena);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarSession;
    private javax.swing.JButton btnRegistrarme;
    private javax.swing.JTextField campo_registro_apellidos;
    private javax.swing.JPasswordField campo_registro_contrasenha;
    private javax.swing.JTextField campo_registro_email;
    private javax.swing.JTextField campo_registro_nombres;
    private javax.swing.JPasswordField campo_singup_contrasenha;
    private javax.swing.JTextField campo_singup_email;
    private javax.swing.JComboBox<String> cmbox_registro_anho;
    private javax.swing.JComboBox<String> cmbox_registro_dia;
    private javax.swing.JComboBox<String> cmbox_registro_mes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panel_1_Background;
    private jpanelimagen.JPanelImagen panel_logo;
    private jpanelimagen.JPanelImagen panel_registro;
    private jpanelimagen.JPanelImagen panel_singup;
    private javax.swing.JRadioButton sexo_registro_femenino;
    private javax.swing.JRadioButton sexo_registro_masculino;
    // End of variables declaration//GEN-END:variables
    private ActionListener escucha;
    public Timer tiempo = new Timer(1000, escucha);

    private void fncCrearCuentaNueva() {
        
        try {
            
            // * Crear contenedores para de almacenamiento de informaci√≥n de la cuenta
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() ).mkdir();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile ).mkdir();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_chats).mkdir();
            
            // * Crear archivos de almacenamiento de informaci√≥n de la cuenta
            //new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile + this.campo_registro_email.getText() + Rutas.extesion_data ).createNewFile();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile + this.campo_registro_email.getText() + Rutas.extesion_friends ).createNewFile();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile + this.campo_registro_email.getText() + Rutas.extesion_chats ).createNewFile();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile + this.campo_registro_email.getText() + Rutas.extesion_notify ).createNewFile();
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_profile + this.campo_registro_email.getText() + Rutas.extesion_tome ).createNewFile();
    
            // * Crear un chat temporal
            new File( Rutas.storage_profiles + this.campo_registro_email.getText() + Rutas.storage_chats + Rutas.extesion_chatmp + this.campo_registro_email.getText() + Rutas.extesion_chats ).createNewFile();

        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fncIniciarSession() {
        
        // * Verificar restricciones
        if( String.valueOf(this.campo_singup_contrasenha.getPassword()).trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca su contrase√±a, por favor...");
        }else if( this.campo_singup_email.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Introduzca su correo electronico, por favor...");
        }else{

            // Crear path y crear objeto archivo
            String email = this.campo_singup_email.getText().trim();
            String contenedor_perfil = Rutas.storage_profiles + email;
            String path_data_perfil = Storage.fncStorageObtenerRutaData(email);
            
            // Crear objetos para verificar existencias
            File contenedor = new File(contenedor_perfil);
            File file_data = new File(path_data_perfil);
            
            // Verificar si existe el usuario, mediante los path creados...
            if ( contenedor.isDirectory() && contenedor.exists() && file_data.exists() ) {
                
                // Verificar si la contrase√±a es correcta
                if( !fncVerificarContrasehna(path_data_perfil) ){
                    JOptionPane.showMessageDialog(null, "Contrase√±a incorrecta... \n");
                }else{
                    // JOptionPane.showMessageDialog(null, "Iniciando session... \n");
                   
                    // Se borra la ventana Principal liberando memoria
                    this.setVisible(false); // Desaparece la ventana
                    this.dispose(); // Se libera la memoria
                   
                    // * Inicializa la ventana de SingUp
                    SingUp ventana = new SingUp( new Session( email ));
                    ventana.setVisible(true);
                    ventana.fncMostrarMensajeDeBienvenida();
                   
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Usuario no existente...\nRegistre un nuevo usuario.");
            }
            
        }
    }
    
    private boolean fncVerificarEmail(){
        
        // Verificar que el email termine con extension_rs
        String email = this.campo_registro_email.getText().trim();
        return (email.indexOf(Storage.extension_rs) + Storage.extension_rs.length()) == email.length();
           
    }
    
    private void fncBorrarCuentasInexistentes(){
        
        // * Verificar si el archivo .data existe
        if( new File(Rutas.path_profiles).exists() ){           
            try {
                                    
                File archivo_tmp = new File(Rutas.path_profiles + "_tmp000.txt");
                if (archivo_tmp.createNewFile()) {

                    try (FileWriter sobrescribirArchivo = new FileWriter(Rutas.path_profiles + "_tmp000.txt")) {
                        BufferedReader leerArchivo = new BufferedReader(new FileReader(Rutas.path_profiles));
                        String linea;

                        while ((linea = leerArchivo.readLine()) != null) {
                            
                            // ****** TESTING
                            System.out.println("Verificando existencia de cuenta: " + linea);
                            
                            if( linea.contains(Storage.extension_rs) ){
                                
                                String contenedor = Rutas.storage_profiles + linea;
                                if( new File(contenedor).isDirectory() && new File(contenedor).exists() ){
                                    sobrescribirArchivo.write(linea + "\n");
                                    System.out.println("sobreescribiendo a : " + linea);
                                }
                                
                            }
                            
                        }
                        leerArchivo.close();
                    }
                    
                    new File(Rutas.path_profiles).delete();
                    
                    // Cambio de storage
                    archivo_tmp.renameTo(new File(Rutas.path_profiles));
                }

            } catch (IOException e) {
            } 
        }
        
    }
    
}
