/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventana_profile;

// Importar mis clases
import clases.*;
import java.awt.Color;
import ventana_pricipal.Principal;
import jpanelimagen.ImagenFondo;

// Importar librerias java
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import javax.swing.text.DefaultCaret;
import ventana_chats.Chats;
import ventana_people.People;
import ventana_singup.SingUp;

/**
 *
 * @author max98
 */
public class Profile extends javax.swing.JFrame {

    /**
     * Creates new form SingUp
     */
    public Profile() {  
        initComponents();
        this.InicializarVentana();
    }
    
    public Profile(Session session_activa, Session perfil) {
        initComponents();
        this.session_activa = session_activa;
        this.perfil = perfil;
        this.InicializarVentana();
    }
    
    public Session getSession_activa() {
        return perfil;
    }

    public void setSession_activa(Session session_activa) {
        this.perfil = session_activa;
    }
    
    public void fncMostrarMensajeDeBienvenida(){
        JOptionPane.showMessageDialog(null, "Hola, " + perfil.getStrNombres() + "\n" + "Bienvenido a RS Gobim.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_2_Background = new jpanelimagen.JPanelImagen();
        panel_foto_de_perfil = new javax.swing.JPanel();
        panel_portada = new jpanelimagen.JPanelImagen();
        campo_nombres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campo_apellidos = new javax.swing.JTextField();
        campo_email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campo_sexo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        campo_contrasenha = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panel_foto_de_perfil.setBackground(new java.awt.Color(255, 255, 255));
        panel_foto_de_perfil.setToolTipText("Click para cambiar el foto de perfil");

        javax.swing.GroupLayout panel_foto_de_perfilLayout = new javax.swing.GroupLayout(panel_foto_de_perfil);
        panel_foto_de_perfil.setLayout(panel_foto_de_perfilLayout);
        panel_foto_de_perfilLayout.setHorizontalGroup(
            panel_foto_de_perfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );
        panel_foto_de_perfilLayout.setVerticalGroup(
            panel_foto_de_perfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        panel_portada.setBackground(new java.awt.Color(204, 255, 255));

        campo_nombres.setText("jTextField1");
        campo_nombres.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Nombre (s):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Apellido (s):");

        campo_apellidos.setText("jTextField1");
        campo_apellidos.setEnabled(false);

        campo_email.setText("jTextField1");
        campo_email.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Sexo:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Correo electronico:");

        campo_sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femenino", "Masculino" }));
        campo_sexo.setEnabled(false);

        jLabel5.setText("Contrase√±a:");

        campo_contrasenha.setText("jPasswordField1");
        campo_contrasenha.setEnabled(false);

        jButton2.setText("Enviar mensaje");

        javax.swing.GroupLayout panel_portadaLayout = new javax.swing.GroupLayout(panel_portada);
        panel_portada.setLayout(panel_portadaLayout);
        panel_portadaLayout.setHorizontalGroup(
            panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_portadaLayout.createSequentialGroup()
                .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_portadaLayout.createSequentialGroup()
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(campo_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel2))
                            .addComponent(campo_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_portadaLayout.createSequentialGroup()
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel4))
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(campo_email, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel5)
                                .addGap(70, 70, 70))
                            .addGroup(panel_portadaLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(campo_contrasenha)))))
                .addGap(57, 57, 57)
                .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_portadaLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campo_sexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );
        panel_portadaLayout.setVerticalGroup(
            panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_portadaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_portadaLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campo_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_portadaLayout.createSequentialGroup()
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campo_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campo_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_portadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campo_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campo_contrasenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton5.setText("Ver lista de amigos");

        jButton6.setText("Ver espacio");

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Volver");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_2_BackgroundLayout = new javax.swing.GroupLayout(panel_2_Background);
        panel_2_Background.setLayout(panel_2_BackgroundLayout);
        panel_2_BackgroundLayout.setHorizontalGroup(
            panel_2_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2_BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_2_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_2_BackgroundLayout.createSequentialGroup()
                        .addComponent(panel_foto_de_perfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panel_portada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_2_BackgroundLayout.setVerticalGroup(
            panel_2_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2_BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_2_BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_foto_de_perfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_portada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_2_Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_2_Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionesDeCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcionesDeCuentaMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_opcionesDeCuentaMouseClicked

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
        
        // Se borra la ventana Profile liberando memoria
        this.observador.stop(); // Se detiene los observadores
        this.setVisible(false); // Desaparece la ventana
        this.dispose(); // Se libera la memoria
        
        // Evitamos que la ventana People se cierre
        People.CerrarVentana = false; 
        
        // Se inicializa la ventana de People
        People ventana = new People(this.perfil);
        this.perfil = null; // En la ventana People se elimina la sesssion_activa
        ventana.setVisible(true); // Se visualiza
        
        System.out.println("*** Profile:::De vuelto a ventana People");
        
        
    }//GEN-LAST:event_jButton1MouseReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campo_apellidos;
    private javax.swing.JPasswordField campo_contrasenha;
    private javax.swing.JTextField campo_email;
    private javax.swing.JTextField campo_nombres;
    private javax.swing.JComboBox<String> campo_sexo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private jpanelimagen.JPanelImagen panel_2_Background;
    private javax.swing.JPanel panel_foto_de_perfil;
    private jpanelimagen.JPanelImagen panel_portada;
    // End of variables declaration//GEN-END:variables
    Session perfil;
    Session session_activa;
    DefaultListModel mensajes = new DefaultListModel();
    DefaultListModel amigos = new DefaultListModel();
    private long size_friendship=0;
    private ActionListener oyente;
    private Timer observador = new Timer(1000, oyente);
    private boolean modificar_cuenta=false;
    
    private void InicializarVentana(){
        // springwd13@gmail.com
        
        try{
             
            ActionListener tarea = (ActionEvent e) -> {
                // Observadores o Watchers (Depende de Session)
                this.fncSincronizandoMensajes();
                //this.fncSincronizarAmigos();
            };

           observador.addActionListener(tarea);
           observador.start();
           
        }catch(Exception a){}
        
        // Este es para JFrame SingUp (No depende de Session)
        this.setLocationRelativeTo(null);
        this.panel_2_Background.setImagenFondo(new ImagenFondo( new java.io.File( getClass().getResource("/img/b3.jpg").getPath() ), 1.0f ));
        this.panel_portada.setImagenFondo(new ImagenFondo( new java.io.File( getClass().getResource("/img/b1.jpg").getPath() ), .2f ));
        
        // Este es para JFrame SingUp (No depende de Session)
        this.fncCambiarEstados(false);
        
        // Este es para JFrame SingUp (Si depende de Session)
        this.fncInstertarDatosDeSession();
        
        // Establecer color para el boton Modificar
        //this.btnModificarCuenta.setBackground(new Color(102,102,102));
        
    }
    
    private void fncSincronizandoMensajes(){
        System.out.println("::: Observador Profile :::");
    }
    
    
    
    private void fncCopiarImagen(String img) throws FileNotFoundException, IOException{
        
        // Crear la nueva ruta del foto de perfil (Email + .svg)
        String path = Storage.fncStorageCrearRutaProfile(this.perfil.getStrEmail(), Rutas.extesion_svg);
        
        FileInputStream in = new FileInputStream(img);
        FileOutputStream ou = new FileOutputStream( path );
        BufferedInputStream bin = new BufferedInputStream(in);
        BufferedOutputStream bou = new BufferedOutputStream(ou);
        
        // Establecer el nuevo nombre del foto de perfil (Email + .svg)
        // como ... example@extension 
        perfil.setStrImgPerfil(perfil.getStrEmail() + Rutas.extesion_svg);
        
        int b=0;
        while(b!=-1){
         b=bin.read();
         bou.write(b);
        }
        
        bin.close();
        bou.close();
    }
    
    public long fncObtenerTamahnoStorages(String file){
        Path path = Paths.get(file);
        long bytes =0;
        try{
             bytes = Files.size(path.toAbsolutePath());
        }catch(Exception e){}
        return bytes;
    }
    
    private void fncInsertarPicture(JPanel contenedor, String url, boolean vaciar){
        
        if(vaciar) contenedor.removeAll();
        
        ImageIcon icono = new ImageIcon( url );
        JLabel etiquetaImagen = new JLabel();
        etiquetaImagen.setBounds(0, 0, contenedor.getWidth(), contenedor.getHeight());
        etiquetaImagen.setIcon( new ImageIcon(icono.getImage().getScaledInstance(etiquetaImagen.getWidth(), etiquetaImagen.getHeight(), Image.SCALE_SMOOTH)) );
        contenedor.add(etiquetaImagen);
        
        if(vaciar) contenedor.validate();
        if(vaciar) contenedor.repaint();
    }
    
    private void fncCambiarEstados(boolean opcion){
        
        // Desactivamo o Activamos los campos de depende de opcion
        this.campo_nombres.setEnabled(opcion);
        this.campo_apellidos.setEnabled(opcion);
        this.campo_email.setEnabled(false);
        this.campo_sexo.setEnabled(opcion);
        this.campo_contrasenha.setEnabled(opcion);
 
    }

    private void fncInstertarDatosDeSession() {
        String img_profile = "";
        
        // Seleccionar el foto de perfil adecuado para el usuario
        if( this.perfil.getStrImgPerfil().equals("user_default.png") ){
            img_profile = Rutas.path_user_default;
            this.fncInsertarPicture(this.panel_foto_de_perfil, img_profile , false); 
        }else{
            img_profile = Storage.fncStorageCrearRutaProfile(this.perfil.getStrEmail(), Rutas.extesion_svg);
            this.fncInsertarPicture(this.panel_foto_de_perfil, img_profile , false);
        }
        
        // Insetar los datos personales del usuario
        this.campo_nombres.setText(perfil.getStrNombres() );
        this.campo_apellidos.setText(perfil.getStrApellidos());
        this.campo_email.setText(perfil.getStrEmail());
        this.campo_contrasenha.setText(perfil.getStrContrasenha() );
        this.campo_sexo.setSelectedItem(perfil.getStrSexo());
        
        // Insertar el titulo de la ventana
        this.setTitle(this.perfil.getStrNombres() + " - " + this.perfil.getStrEmail()  );
    }

    private int fncVerificarCampos() {
        
         // Este es contar los campos modificados
        int campos_modificados = 0;
        int campos_vacios = 0;
        int campos_identicos = 0;
        
        // Quitamos los border rojos de error en caso de existir
        this.campo_nombres.setBorder( new JTextField().getBorder() );
        this.campo_apellidos.setBorder( new JTextField().getBorder() );
        this.campo_email.setBorder( new JTextField().getBorder() );
        this.campo_contrasenha.setBorder( new JTextField().getBorder() );
        
        // Verificar que el campo nombre sea distinto al actual y que no este vacio..
        if( !this.campo_nombres.getText().equals(this.perfil.getStrNombres()) ){
            if( !this.campo_nombres.getText().isEmpty() ){
                //this.session_activa.setStrNombres( this.campo_nombres.getText() );
                campos_modificados ++;
            }else {
                this.campo_nombres.setBorder(  BorderFactory.createBevelBorder(BevelBorder.LOWERED, Color.LIGHT_GRAY, Color.RED) );
                campos_vacios++;
            }
        } else campos_identicos++;
        
        // Verificar que el campo apellidos sea distinto al actual y que no este vacio..
        if( !this.campo_apellidos.getText().equals(this.perfil.getStrApellidos()) ){
            if( !this.campo_apellidos.getText().isEmpty() ){
                //this.session_activa.setStrApellidos(this.campo_apellidos.getText() );
                campos_modificados ++;
            }else {
                this.campo_apellidos.setBorder(  BorderFactory.createBevelBorder(BevelBorder.LOWERED, Color.LIGHT_GRAY, Color.RED) );
                campos_vacios++;
            }
        } else campos_identicos++;
        
        // Verificar que el campo email sea distinto al actual y que no este vacio..
        if( !this.campo_email.getText().equals(this.perfil.getStrEmail()) ){
            if( !this.campo_email.getText().isEmpty() ){
                //this.session_activa.setStrEmail(this.campo_email.getText() );
                campos_modificados ++;
            }else {
                this.campo_email.setBorder(  BorderFactory.createBevelBorder(BevelBorder.LOWERED, Color.LIGHT_GRAY, Color.RED) );
                campos_vacios++;
            }
        } else campos_identicos++;
        
        // Verificar que el campo contrse√±a sea distinto al actual y que no este vacio..
        String password = String.valueOf(this.campo_contrasenha.getPassword());
        if( !password.equals(this.perfil.getStrContrasenha()) ){
            if( !password.isEmpty() ){
                //this.session_activa.setStrContrasenha(password);
                campos_modificados ++;
            }else {
                this.campo_contrasenha.setBorder(  BorderFactory.createBevelBorder(BevelBorder.LOWERED, Color.LIGHT_GRAY, Color.RED) );
                campos_vacios++;
            }
        } else campos_identicos++;
        
        // Verificar que el campo sexo sea distinto al actual y que no este vacio..
        if( !this.campo_sexo.getSelectedItem().toString().equals(this.perfil.getStrSexo()) ){
            if( !this.campo_sexo.getSelectedItem().toString().isEmpty() ){
                //this.session_activa.setStrSexo(this.campo_sexo.getSelectedItem().toString());
                campos_modificados++;
            }else campos_vacios++;
        } else campos_identicos++;

        // Si hay un solo campo modificado.. se actualizan los datos..
        if(campos_vacios > 0){
           return 400; // Retorna un estado 400, significa que hay campos vacios
        // Si hay un solo campo modificado.. se actualizan los datos..
        }else if(campos_modificados > 0 ){
           return 100; // Retorna un estado 100, significa que hay campos modificados 
        }else if(campos_identicos > 0 ){
           return 0; // Retorna un estado 0, significa que hay campos modificados
        }
        
        // Retorna un estado -1, estado no identificado
        return -1;
    }

    private void fncModificarDatosDeSession() {
        System.out.println("Estado: " + this.fncVerificarCampos());
            
            int resultado = this.fncVerificarCampos();
            
            if(resultado == 400){
                JOptionPane.showMessageDialog(null, "Complete los datos solicitado.");
            }else
            if( resultado == 100 || resultado == 0 ){
                
                Box box = Box.createVerticalBox();
                JLabel t = new JLabel("Introduzca la contrase√±a actual");
                box.add(t);
                JPasswordField jpf = new JPasswordField(24);
                box.add(jpf);
                int button = -1;
                box.setLocation( this.getLocation() );
                
                int intentos = 0;
                boolean modificado=false;
                do{
                    if( resultado == 100)
                    button = JOptionPane.showConfirmDialog(null, box, "Confirmar los nuevos datos...", JOptionPane.OK_CANCEL_OPTION);
                   
                    if (button == JOptionPane.OK_OPTION) {
                        if( String.valueOf(this.campo_contrasenha.getPassword()).equals(this.perfil.getStrContrasenha()) ) {
                            // Enviar los datos del formulario a session
                            this.perfil.setStrNombres(this.campo_nombres.getText());
                            this.perfil.setStrApellidos(this.campo_apellidos.getText());
                            this.perfil.setStrEmail(this.campo_email.getText());
                            this.perfil.setStrContrasenha( String.valueOf(this.campo_contrasenha.getPassword()) );
                            this.perfil.setStrSexo( this.campo_sexo.getSelectedItem().toString() );

                            this.perfil.fncActualizarDatos();
                            JOptionPane.showMessageDialog(null, "Tus datos sean actualizado exito.");
                            modificado  = true;

                        }else{
                            intentos++;
                            JOptionPane.showMessageDialog(null, "Contrase√±a incorrecta, datos no actualizados.\n"
                                    + "Puedes volver internarlo en "+ (3 - intentos) +" intentos mas.");
                             
                        }
                    }
                }while(button == JOptionPane.OK_OPTION && intentos < 3 && modificado == false );
                
                // Desactivamos los campos para modificar datos
                this.modificar_cuenta = false;
                this.fncCambiarEstados(modificar_cuenta);
                //this.btnModificarCuenta.setText("Modificar");
                //this.btnModificarCuenta.setBackground(new Color(102,102,102));
                this.fncInstertarDatosDeSession();
            }
    }
    

    
}
